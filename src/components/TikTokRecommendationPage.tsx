import React, { useState, useRef } from 'react';
import { View, Text, StyleSheet, Dimensions, FlatList, PanResponder, Animated } from 'react-native';

interface VideoData {
  id: string;
  title: string;
  subtitle: string;
  content: string;
  backgroundColor: string;
}

const { height: screenHeight, width: screenWidth } = Dimensions.get('window');

const TikTokRecommendationPage: React.FC = () => {
  const [currentIndex, setCurrentIndex] = useState(0);
  const flatListRef = useRef<FlatList>(null);
  const offsetY = useRef(new Animated.Value(0)).current;

  const videoData: VideoData[] = [
    {
      id: '1',
      title: 'Êñ∞ÊäÄÊúØË∂ãÂäø',
      subtitle: 'AIÊäÄÊúØÂú®ÁßªÂä®ÂºÄÂèë‰∏≠ÁöÑÂ∫îÁî®',
      content: 'ÈöèÁùÄ‰∫∫Â∑•Êô∫ËÉΩÊäÄÊúØÁöÑ‰∏çÊñ≠ÂèëÂ±ïÔºåË∂äÊù•Ë∂äÂ§öÁöÑÁßªÂä®Â∫îÁî®ÂºÄÂßãÈõÜÊàêAIÂäüËÉΩÔºå‰∏∫Áî®Êà∑Êèê‰æõÊõ¥Êô∫ËÉΩÁöÑ‰ΩìÈ™å„ÄÇ',
      backgroundColor: '#FF6B6B',
    },
    {
      id: '2',
      title: 'ËÆæËÆ°ÁêÜÂøµ',
      subtitle: 'Áé∞‰ª£ÁßªÂä®Â∫îÁî®ËÆæËÆ°ÂéüÂàô',
      content: 'Â•ΩÁöÑËÆæËÆ°‰∏ç‰ªÖË¶ÅÁæéËßÇÔºåÊõ¥Ë¶ÅÊ≥®ÈáçÁî®Êà∑‰ΩìÈ™å„ÄÇÁÆÄÊ¥Å„ÄÅÁõ¥ËßÇ„ÄÅ‰∏ÄËá¥ÊÄßÊòØÁé∞‰ª£Â∫îÁî®ËÆæËÆ°ÁöÑÂü∫Êú¨Ë¶ÅÊ±Ç„ÄÇ',
      backgroundColor: '#4ECDC4',
    },
    {
      id: '3',
      title: 'ÊÄßËÉΩ‰ºòÂåñ',
      subtitle: 'ÊèêÂçáÂ∫îÁî®ÂìçÂ∫îÈÄüÂ∫¶ÁöÑÊäÄÂ∑ß',
      content: 'Â∫îÁî®ÁöÑÊÄßËÉΩÁõ¥Êé•ÂΩ±ÂìçÁî®Êà∑‰ΩìÈ™å„ÄÇÈÄöËøáÂêàÁêÜÁöÑ‰ª£Á†Å‰ºòÂåñ„ÄÅËµÑÊ∫êÁÆ°ÁêÜÂíåÁºìÂ≠òÁ≠ñÁï•ÔºåÂèØ‰ª•ÊòæËëóÊèêÂçáÂ∫îÁî®ÊÄßËÉΩ„ÄÇ',
      backgroundColor: '#45B7D1',
    },
    {
      id: '4',
      title: 'Áî®Êà∑‰ΩìÈ™å',
      subtitle: '‰ª•‰∫∫‰∏∫Êú¨ÁöÑ‰∫ßÂìÅËÆæËÆ°',
      content: '‰ºòÁßÄÁöÑÁî®Êà∑‰ΩìÈ™åÈúÄË¶ÅÊ∑±ÂÖ•‰∫ÜËß£Áî®Êà∑ÈúÄÊ±ÇÔºå‰ªéÁî®Êà∑ËßíÂ∫¶ÊÄùËÄÉÈóÆÈ¢òÔºåÂàõÈÄ†Âá∫ÁúüÊ≠£Êúâ‰ª∑ÂÄºÁöÑ‰∫ßÂìÅ„ÄÇ',
      backgroundColor: '#96CEB4',
    },
    {
      id: '5',
      title: 'Â∏ÇÂú∫Ë∂ãÂäø',
      subtitle: 'ÁßªÂä®Â∫îÁî®Â∏ÇÂú∫ÁöÑÂèëÂ±ïÊñπÂêë',
      content: 'ÈöèÁùÄ5GÁΩëÁªúÁöÑÊôÆÂèäÂíåÁâ©ËÅîÁΩëÁöÑÂèëÂ±ïÔºåÁßªÂä®Â∫îÁî®Ê≠£ÊúùÁùÄÊõ¥Âä†Êô∫ËÉΩÂåñÂíåÂ§öÊ†∑ÂåñÁöÑÊñπÂêëÂèëÂ±ï„ÄÇ',
      backgroundColor: '#FECA57',
    },
    {
      id: '6',
      title: 'ÊäÄÊúØÂàõÊñ∞',
      subtitle: 'ÂâçÁ´ØÊ°ÜÊû∂ÁöÑÊúÄÊñ∞ÂèëÂ±ï',
      content: 'React„ÄÅVue„ÄÅAngularÁ≠âÂâçÁ´ØÊ°ÜÊû∂‰∏çÊñ≠ÊºîËøõÔºåÂ∏¶Êù•Êõ¥È´òÊïàÁöÑÂºÄÂèë‰ΩìÈ™åÂíåÊõ¥Â•ΩÁöÑÊÄßËÉΩË°®Áé∞„ÄÇ',
      backgroundColor: '#FF9F43',
    },
    {
      id: '7',
      title: '‰∫ëÂéüÁîü',
      subtitle: 'Áé∞‰ª£ÂåñÈÉ®ÁΩ≤Êû∂ÊûÑ',
      content: 'ÂÆπÂô®Âåñ„ÄÅÂæÆÊúçÂä°„ÄÅDevOpsÁ≠â‰∫ëÂéüÁîüÊäÄÊúØÊ≠£Âú®ÈáçÂ°ëËΩØ‰ª∂ÂºÄÂèëÂíåÈÉ®ÁΩ≤ÁöÑÊñπÂºèÔºåÊèêÂçáÁ≥ªÁªüÁöÑÂèØÈù†ÊÄßÂíåÂèØÊâ©Â±ïÊÄß„ÄÇ',
      backgroundColor: '#A55EEA',
    },
    {
      id: '8',
      title: 'Êï∞ÊçÆÁßëÂ≠¶',
      subtitle: 'Êú∫Âô®Â≠¶‰π†ÁÆóÊ≥ïÂÆûË∑µ',
      content: '‰ªéÊé®ËçêÁ≥ªÁªüÂà∞ÂõæÂÉèËØÜÂà´ÔºåÊú∫Âô®Â≠¶‰π†ÁÆóÊ≥ïÂú®ÂêÑ‰∏™È¢ÜÂüüÈÉΩÊúâÂπøÊ≥õÂ∫îÁî®ÔºåÊåÅÁª≠Êé®Âä®ÊäÄÊúØÂàõÊñ∞ÁöÑËæπÁïå„ÄÇ',
      backgroundColor: '#26C6DA',
    },
  ];

  const onViewableItemsChanged = useRef(({ viewableItems }: any) => {
    if (viewableItems.length > 0) {
      setCurrentIndex(viewableItems[0].index);
    }
  }).current;

  const viewabilityConfig = {
    itemVisiblePercentThreshold: 50,
  };

  const renderVideo = ({ item, index }: { item: VideoData; index: number }) => (
    <View style={[styles.videoContainer, { backgroundColor: item.backgroundColor }]}>
      {/* ‰∏ªË¶ÅÂÜÖÂÆπÂå∫Âüü */}
      <View style={styles.contentArea}>
        <View style={styles.textContent}>
          <Text style={styles.title}>{item.title}</Text>
          <Text style={styles.subtitle}>{item.subtitle}</Text>
          <Text style={styles.description}>{item.content}</Text>
        </View>
      </View>

      {/* Âè≥‰æßÂäüËÉΩÊåâÈíÆÂå∫Âüü */}
      <View style={styles.rightPanel}>
        <View style={styles.rightButtonContainer}>
          <View style={styles.actionButton}>
            <Text style={styles.actionIcon}>üëç</Text>
            <Text style={styles.actionText}>123</Text>
          </View>
          
          <View style={styles.actionButton}>
            <Text style={styles.actionIcon}>üí¨</Text>
            <Text style={styles.actionText}>ËØÑËÆ∫</Text>
          </View>
          
          <View style={styles.actionButton}>
            <Text style={styles.actionIcon}>üì§</Text>
            <Text style={styles.actionText}>ÂàÜ‰∫´</Text>
          </View>
          
          <View style={styles.actionButton}>
            <Text style={styles.actionIcon}>‚≠ê</Text>
            <Text style={styles.actionText}>Êî∂Ëóè</Text>
          </View>
        </View>
      </View>

      {/* Â∫ïÈÉ®‰ø°ÊÅØÊ†è */}
      <View style={styles.bottomInfo}>
        <View style={styles.infoContainer}>
          <Text style={styles.authorText}>@{item.title.toLowerCase().replace(/\s+/g, '')}</Text>
          <Text style={styles.videoDescription}>{item.subtitle}</Text>
        </View>
        
        {/* È°µÁ†ÅÊåáÁ§∫Âô® */}
        <View style={styles.pageIndicator}>
          <Text style={styles.pageText}>{index + 1}</Text>
          <Text style={styles.pageSeparator}>/</Text>
          <Text style={styles.pageText}>{videoData.length}</Text>
        </View>
      </View>
    </View>
  );

  return (
    <View style={styles.container}>
      <FlatList
        ref={flatListRef}
        data={videoData}
        renderItem={renderVideo}
        keyExtractor={(item) => item.id}
        pagingEnabled
        showsVerticalScrollIndicator={false}
        snapToInterval={screenHeight}
        snapToAlignment="start"
        decelerationRate="fast"
        bounces={false}
        onViewableItemsChanged={onViewableItemsChanged}
        viewabilityConfig={viewabilityConfig}
        style={styles.flatList}
      />
      
      {/* È°∂ÈÉ®ËøõÂ∫¶ÊåáÁ§∫Âô® */}
      <View style={styles.topIndicator}>
        <View style={styles.progressBar}>
          {videoData.map((_, index) => (
            <View
              key={index}
              style={[
                styles.progressDot,
                index === currentIndex && styles.activeProgressDot,
                index < currentIndex && styles.completedProgressDot,
              ]}
            />
          ))}
        </View>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#000000',
  },
  flatList: {
    flex: 1,
  },
  videoContainer: {
    height: screenHeight,
    width: screenWidth,
    position: 'relative',
  },
  contentArea: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    paddingHorizontal: 24,
  },
  textContent: {
    alignItems: 'center',
  },
  title: {
    fontSize: 32,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginBottom: 12,
    textAlign: 'center',
    textShadowColor: 'rgba(0, 0, 0, 0.5)',
    textShadowOffset: { width: 1, height: 1 },
    textShadowRadius: 3,
  },
  subtitle: {
    fontSize: 20,
    fontWeight: '600',
    color: '#FFFFFF',
    marginBottom: 24,
    textAlign: 'center',
    opacity: 0.9,
    textShadowColor: 'rgba(0, 0, 0, 0.5)',
    textShadowOffset: { width: 1, height: 1 },
    textShadowRadius: 2,
  },
  description: {
    fontSize: 16,
    color: '#FFFFFF',
    lineHeight: 24,
    textAlign: 'center',
    opacity: 0.8,
    paddingHorizontal: 20,
    textShadowColor: 'rgba(0, 0, 0, 0.3)',
    textShadowOffset: { width: 1, height: 1 },
    textShadowRadius: 2,
  },
  rightPanel: {
    position: 'absolute',
    right: 16,
    bottom: 120,
  },
  rightButtonContainer: {
    alignItems: 'center',
  },
  actionButton: {
    alignItems: 'center',
    marginBottom: 24,
    width: 60,
  },
  actionIcon: {
    fontSize: 32,
    marginBottom: 4,
    textShadowColor: 'rgba(0, 0, 0, 0.5)',
    textShadowOffset: { width: 1, height: 1 },
    textShadowRadius: 2,
  },
  actionText: {
    fontSize: 12,
    color: '#FFFFFF',
    fontWeight: '500',
    textAlign: 'center',
    textShadowColor: 'rgba(0, 0, 0, 0.5)',
    textShadowOffset: { width: 1, height: 1 },
    textShadowRadius: 1,
  },
  bottomInfo: {
    position: 'absolute',
    left: 16,
    right: 80,
    bottom: 30,
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'flex-end',
  },
  infoContainer: {
    flex: 1,
  },
  authorText: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#FFFFFF',
    marginBottom: 4,
    textShadowColor: 'rgba(0, 0, 0, 0.5)',
    textShadowOffset: { width: 1, height: 1 },
    textShadowRadius: 2,
  },
  videoDescription: {
    fontSize: 14,
    color: '#FFFFFF',
    opacity: 0.9,
    textShadowColor: 'rgba(0, 0, 0, 0.5)',
    textShadowOffset: { width: 1, height: 1 },
    textShadowRadius: 2,
  },
  pageIndicator: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  pageText: {
    fontSize: 14,
    color: '#FFFFFF',
    fontWeight: '500',
    opacity: 0.8,
    textShadowColor: 'rgba(0, 0, 0, 0.5)',
    textShadowOffset: { width: 1, height: 1 },
    textShadowRadius: 1,
  },
  pageSeparator: {
    fontSize: 12,
    color: '#FFFFFF',
    opacity: 0.6,
    marginHorizontal: 4,
    textShadowColor: 'rgba(0, 0, 0, 0.5)',
    textShadowOffset: { width: 1, height: 1 },
    textShadowRadius: 1,
  },
  topIndicator: {
    position: 'absolute',
    top: 40,
    left: 16,
    right: 16,
    zIndex: 10,
  },
  progressBar: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  progressDot: {
    height: 3,
    flex: 1,
    backgroundColor: 'rgba(255, 255, 255, 0.3)',
    marginHorizontal: 1,
    borderRadius: 1.5,
  },
  activeProgressDot: {
    backgroundColor: '#FFFFFF',
    opacity: 0.9,
  },
  completedProgressDot: {
    backgroundColor: '#FFFFFF',
    opacity: 0.7,
  },
});

export default TikTokRecommendationPage;
